{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CloudFormation Template for CircleCI Roles and Policies",
  "Parameters": {
    "domainName": {
      "Description": "domain Name for S3 Bucket Naming",
      "Type": "String",
      "AllowedValues": [
        "csye6225-su19-sebastianc.me",
        "csye6225-su19-gandhiman.me",
        "csye6225-su19-sharmashubh.me"
      ]
    }
  },
  "Resources": {
    "s3BucketId": {
      "Type" : "AWS::S3::Bucket",
      "DeletionPolicy" : "Delete",
      "Properties" : {
        "BucketName" : {"Fn::Sub" : "${domainName}.csye6225.com"},
        "PublicAccessBlockConfiguration" : {
          "BlockPublicAcls" : true,
          "BlockPublicPolicy" : true,
          "IgnorePublicAcls" : true,
          "RestrictPublicBuckets" : true
        },
        "Tags" : [ {
          "Key" : "Name",
          "Value" : { "Fn::Sub": "${AWS::StackName}-S3-Bucket" }
        } ]
      }
    },
    "s3BucketCrudPolicyId": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "DependsOn": "s3BucketId",
      "Properties" : {
        "ManagedPolicyName" : "EC2-S3-Access",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Sid": "AllowGetPutDeleteActionsOnS3Bucket",
              "Effect": "Allow",
              "Action": ["s3:PutObject", "s3:GetObject", "s3:DeleteObject"],
              "Resource": {
                "Fn::Sub": [
                  "${bucketArn}/*",
                  { "bucketArn": {"Fn::GetAtt" : [ "s3BucketId", "Arn" ]} }
                ]
              }
            }
          ]
        }
      }
    },
    "circleciEc2AmiPolicyId": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "ManagedPolicyName" : "CircleCI-EC2-AMI",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action" : [
              "ec2:AttachVolume",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:CopyImage",
              "ec2:CreateImage",
              "ec2:CreateKeypair",
              "ec2:CreateSecurityGroup",
              "ec2:CreateSnapshot",
              "ec2:CreateTags",
              "ec2:CreateVolume",
              "ec2:DeleteKeyPair",
              "ec2:DeleteSecurityGroup",
              "ec2:DeleteSnapshot",
              "ec2:DeleteVolume",
              "ec2:DeregisterImage",
              "ec2:DescribeImageAttribute",
              "ec2:DescribeImages",
              "ec2:DescribeInstances",
              "ec2:DescribeInstanceStatus",
              "ec2:DescribeRegions",
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSnapshots",
              "ec2:DescribeSubnets",
              "ec2:DescribeTags",
              "ec2:DescribeVolumes",
              "ec2:DetachVolume",
              "ec2:GetPasswordData",
              "ec2:ModifyImageAttribute",
              "ec2:ModifyInstanceAttribute",
              "ec2:ModifySnapshotAttribute",
              "ec2:RegisterImage",
              "ec2:RunInstances",
              "ec2:StopInstances",
              "ec2:TerminateInstances"
            ],
            "Resource": "*"
          }]
        },
        "Users": ["circleci"]
      }
    },
    "codeDeployEc2S3PolicyId": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "ManagedPolicyName" : "CodeDeploy-EC2-S3",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ {
            "Action": [ "s3:Get*", "s3:List*" ],
            "Effect": "Allow",
            "Resource": [
              { "Fn::Sub": "arn:aws:s3:::code-deploy.${domainName}/*" },
              "arn:aws:s3:::aws-codedeploy-us-east-2/*",
              "arn:aws:s3:::aws-codedeploy-us-east-1/*"
            ]
          } ]
        }
      }
    },
    "circleciS3UploadPolicyId": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "ManagedPolicyName" : "CircleCI-Upload-To-S3",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ {
            "Action": [ "s3:PutObject" ],
            "Effect": "Allow",
            "Resource": { "Fn::Sub": "arn:aws:s3:::code-deploy.${domainName}/*" }
          } ]
        },
        "Users": ["circleci"]
      }
    },
    "codeDeployEC2ServiceRoleId": {
      "Type": "AWS::IAM::Role",
      "DependsOn": ["codeDeployEc2S3PolicyId", "s3BucketCrudPolicyId"],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [ {
            "Effect": "Allow",
            "Principal": { "Service": ["ec2.amazonaws.com"] },
            "Action": ["sts:AssumeRole"]
          } ]
        },
        "Path": "/",
        "RoleName": "CodeDeployEC2ServiceRole",
        "ManagedPolicyArns": [ {"Ref": "codeDeployEc2S3PolicyId"}, {"Ref": "s3BucketCrudPolicyId"}, "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy" ],
        "Tags" : [ {
          "Key" : "Name",
          "Value" : { "Fn::Sub": "${AWS::StackName}-CodeDeployEC2ServiceRole" }
        } ]
      }
    },
    "CodeDeployServiceRoleId": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [ {
            "Sid": "",
            "Effect": "Allow",
            "Principal": { "Service": "codedeploy.amazonaws.com" },
            "Action": ["sts:AssumeRole"]
          } ]
        },
        "Path": "/",
        "RoleName": "CodeDeployServiceRole",
        "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole" ],
        "Tags" : [ {
          "Key" : "Name",
          "Value" : { "Fn::Sub": "${AWS::StackName}-CodeDeployServiceRole" }
        } ]
      }
    },
    "applicationId": {
      "Type" : "AWS::CodeDeploy::Application",
      "Properties" : {
        "ApplicationName" : "csye6225-webapp",
        "ComputePlatform" : "Server"
      }
    },
    "deploymentGroupId" : {
      "Type" : "AWS::CodeDeploy::DeploymentGroup",
      "Properties" : {
        "ApplicationName" : {"Ref" : "applicationId"},
        "DeploymentGroupName": "csye6225-webapp-deployment",
        "ServiceRoleArn" : { "Fn::GetAtt" : [ "CodeDeployServiceRoleId", "Arn" ] },
        "DeploymentStyle": {
          "DeploymentType": "IN_PLACE",
          "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
        },
        "Ec2TagFilters" : [{
          "Key" : "Application Role",
          "Value" : "Web Server",
          "Type" : "KEY_AND_VALUE"
        }],
        "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
        "AutoRollbackConfiguration": {
          "Enabled" : "True",
          "Events" : [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM",
            "DEPLOYMENT_STOP_ON_REQUEST"
          ]
        }
      }
    },
    "cirlceciCodeDeployPolicyId": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "DependsOn": "applicationId",
      "Properties" : {
        "ManagedPolicyName" : "CirlceCI-Code-Deploy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:RegisterApplicationRevision",
                "codedeploy:GetApplicationRevision",
                "codedeploy:ListApplicationRevisions"
              ],
              "Resource": [ {
                "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:${applicationId}"
              } ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetDeployment"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${applicationId}/${deploymentGroupId}" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [ "codedeploy:GetDeploymentConfig" ],
              "Resource": [
                {"Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime"},
                {"Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime"},
                {"Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce"}
              ]
            }
          ]
        },
        "Users": ["circleci"]
      }
    }
  },
  "Outputs": {
    "codeDeployEC2ServiceRoleId": {
      "Description": "Application S3 Bucket",
      "Value": { "Ref": "codeDeployEC2ServiceRoleId" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-codeDeployEC2ServiceRoleId" }
      }
    },
    "s3BucketId": {
      "Description": "Application S3 Bucket",
      "Value": { "Ref": "s3BucketId" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-s3BucketId" }
      }
    }
  }
}