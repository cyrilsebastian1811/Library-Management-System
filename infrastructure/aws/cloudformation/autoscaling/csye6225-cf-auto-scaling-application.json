{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Template for a Application stack ec2 instance ",
  "Parameters": {
    "NetworkStackName": {
      "Description": "Web-Application Network Stack Name",
      "Type": "String"
    },
    "amiId": {
      "Description": "Image-ID of created Centos",
      "Type": "String"
    },
    "CircleCIStackName": {
      "Description": "CircleCI Roles and Policies Stack Name",
      "Type": "String"
    },
    "domainName": {
      "Description": "domain Name for S3 Bucket Naming",
      "Type": "String",
      "AllowedValues": [
        "csye6225-su19-sebastianc.me",
        "csye6225-su19-gandhiman.me",
        "csye6225-su19-sharmashubh.me"
      ]
    }
  },
  "Resources": {
    "s3BucketId": {
      "Type" : "AWS::S3::Bucket",
      "DeletionPolicy" : "Delete",
      "Properties" : {
        "BucketName" : {"Fn::Sub" : "${domainName}.csye6225.com"},
        "PublicAccessBlockConfiguration" : {
          "BlockPublicAcls" : true,
          "BlockPublicPolicy" : true,
          "IgnorePublicAcls" : true,
          "RestrictPublicBuckets" : true
        },
        "Tags" : [ {
          "Key" : "Name",
          "Value" : { "Fn::Sub": "${AWS::StackName}-S3-Bucket" }
        } ]
      }
    },
    "s3BucketCrudPolicyId": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "DependsOn": "s3BucketId",
      "Properties" : {
        "ManagedPolicyName" : "EC2-S3-Access",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Sid": "AllowGetPutDeleteActionsOnS3Bucket",
              "Effect": "Allow",
              "Action": ["s3:PutObject", "s3:GetObject", "s3:DeleteObject"],
              "Resource": {
                "Fn::Sub": [
                  "${bucketArn}/*",
                  { "bucketArn": {"Fn::GetAtt" : [ "s3BucketId", "Arn" ]} }
                ]
              }
            }
          ]
        },
        "Roles": [{ "Fn::ImportValue": {"Fn::Sub": "${CircleCIStackName}-ec2ExecutionRoleId"} }]
      }
    },
   
  
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-WebappSecuritygroup",
        "GroupDescription": "Security Group for web server",
        "VpcId": {"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-vpcId"}},
        "SecurityGroupIngress": [
         
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
          
        ]
      }
    },




    "WebappSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-WebappSecuritygroup",
        "GroupDescription": "Security Group for web server",
        "VpcId": {"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-vpcId"}},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [ "WebappSecurityGroup", "GroupId" ]
            }
          }
        ]
      }
    },
    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-DBSecurityGroup",
        "GroupDescription": "Enable TCP access via port 3306",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${NetworkStackName}-vpcId"
          }
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [ "WebappSecurityGroup", "GroupId" ]
            }
          }
        ]
      }
    },
    "dbSubnetGroupId": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Data Base Group Name to be assigned to ",
        "DBSubnetGroupName": "DBsubnetGroup",
        "SubnetIds": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStackName}-subnet2Id"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStackName}-subnet3Id"
            }
          }
        ]
      }
    },


   
    "rdsInstanceId": {
      "Type": "AWS::RDS::DBInstance",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AllocatedStorage": "20",
        "Engine": "mysql",
        "EngineVersion": "5.6.35",
        "DBInstanceClass": "db.t2.micro",
        "MultiAZ": false,
        "DBInstanceIdentifier": "csye6225-su19",
        "MasterUsername": "csye6225master",
        "MasterUserPassword": "csye6225password",
        "DBSubnetGroupName": {
          "Ref": "dbSubnetGroupId"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "DBSecurityGroup"
          }
        ],
        "PubliclyAccessible": true,
        "DBName": "csye6225",
        "Port": "3306"
      }
    },


    "dynamoDBId": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "csye6225",
        "AttributeDefinitions": [
          {
            "AttributeName": "emailId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "emailId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "TimeToLiveSpecification": {
          "AttributeName" : "timeStamp",
          "Enabled" : true
        }        
      }
    },
    
    "myCertification":{
      "Type" : "AWS::CertificateManager::Certificate",
      "Properties" : {
          "DomainName" : {"Fn::Sub" : "${domainName}"},

          "ValidationMethod" : "DNS"
        }
    },
    
    "myLoadBalancer":{
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
          "Certificates" : {"Ref" : "myCertification"},
          "DefaultActions" : [{
            "Type" : "forward",
            "TargetGroupArn" : { "Ref" : "ALBTargetGroup" }
          }],
          "LoadBalancerArn" : {"Ref" :  "AlicationLoadBalancer"},
          "Port" : 80,
          "Protocol" : "HTTP"
        }
    },

    "AlicationLoadBalancer":{
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
          "IpAddressType" : "ipv4",
          "Name" : "appLoadBalancer",
          "Scheme" : "internet-facing",
          "SecurityGroups" : [{"Ref": "LoadBalancerSecurityGroup"} ],
          "Subnets" : [  {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStackName}-subnet1Id"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStackName}-subnet2Id"
            }
          }],
          "Type" : "application"
        }
    }
    
    
  },
  "loadBalancerTargetGroupId":{
    "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
    "Properties" : {
      
        
    
        "Name" : "EC2TargetGroup",
        "Port" : 8080,
        "Protocol" : "HTTP",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Sub": "${AWS::StackName}-LoadBalancerTargetGroup" }
          }
        ],
        
        "TargetType" : "instance",
        "VpcId": {"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-vpcId"}},
      }
  }
  ,







  "Outputs": {
    "dynamoDBTable": {
      "Description": "DynamoDB Table Name",
      "Value": {"Ref": "dynamoDBId"},
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-dynamoDBTable" }
      }
    },
    
    "dynamoDBArn": {
      "Description": "DynamoDB Table Arn",
      "Value": {"Fn::GetAtt": ["dynamoDBId", "Arn"]},
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-dynamoDBArn" }
      }
    }
  }
}
